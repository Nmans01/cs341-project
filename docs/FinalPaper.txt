                                            Podium Check Form 


	This semester when our team first started looking at ideas of a way we should take our project it was not an easy 
process. We started off just spitballing ideas to each other and nothing ever really stuck with any of us, so in the event of 
just needing to get started we came up with the idea to have a desktop application that would generate backgrounds for games, 
movies, etc. In the beginning none of us really loved the idea and it showed as no one seemed to be interested enough to work 
on it and commit anything to the project. However, looking back now it was a blessing in disguise, one of our group members had
done some digging with 3D libraries in python and java script and came to the conclusion that this idea may have been a little 
over our heads. It seemed that making a whole website and an application based on this idea was going to take a lot longer than 
a semester as we would have to teach ourselves how to use these libraries in our code while learning web development at the same 
time. With all of this information we were back to square one when Nick Nolt had come up with the idea to make a website/form for 
the IT department that made the podium checks go a lot smoother. This idea would stick with us as we felt this could be something 
that could actually contribute to the college and live on past us, which is what we were really looking for.
    During this project what made us all really interested in this web application was the purpose. We took on this project 
because we knew this would be an actual use for the college and specifically the IT department. This site’s functional purpose 
was to create a form so podium checks would be a lot more organized and easier to navigate from the admin and user side. To 
fulfill this purpose we as a team successfully made a calendar that shows the student who they were working with for the day 
and what room they would be in to conduct the podium check. After the student had that information the two would go to the room 
and start filling out the form making sure everything that needed to be checked was documented. After they were done with the room 
they would hit submit and the data from that form would now be stored in the database for the admin to see. The admin side was made 
so they could add and delete users, see the data coming from the forms being submitted by the employees to see how the technology 
is holding up, and lastly modify room attributes on the form. So with these factors that go into our website we absolutely achieved 
our purpose for the project as well as the functionality for it as well. 
    The user stories in this project are really simple actually considering the only people who would be using this site are people 
who work in IT. Specifically there are two different cases in which this site would be used, first there is an admin who is able to 
have a little more accessibility with using the site where they can modify the forms, see all of the users, and look at data from 
the forms. The users on this site are only able to access the form and see the calendar with the job they had for the day and who 
works with them on the job. Here is what our user stories looked like, “							

                                                    [Admin]
“As the admin I want to be able to have a form that gives me the ability to easily track room attributes for different rooms and 
their displays. With this form we can check various aspects including things like lamp usage, projector runtimes, and overall room usage. ”

The administration from IT can use this form and database to make the classroom check easier by having one place to store all information 
about the room and its usage, to easier track when components are nearing their end of life cycle.

                                            [Normal Users/ITS student workers]

“As a student this form will help me be able to check and see if there are any issues with any of the technology that the podium is using 
like the projector lamp, audio, and DVD player so that it can be fixed and the data can be easily stored."

The student aspect of the form would be helpful so that IT workers can look at these forms and know what problems are going on with the 
podium and what would need to be fixed. This is just an easier way to go about fixing these issues for the school.”
    Some of the key problems our team ran into had to do with time conflicts regarding getting the whole team to meet at a place to go 
over whatever was on the agenda for the day, working with the database and implementing the APIs, and time management. First one of the 
biggest issues we had was getting everyone’s schedule to align so we could meet as a team. This may not seem like that big of a deal but 
looking back at the work we were able to accomplish, the best version of it always happened when we were all together as a team. I think 
this was due to the fact that when we were all together and someone had an issue there were three other team members there to give immediate 
feedback and help, however when we were not together it was more of figuring things out on your own with trial and error. Using text and 
calling only worked and went so far when that person was not there with you to actually see the issue, obviously. Second, implementing APIs 
and using the database was a little bit of a challenge for us just because it was something new and while three of us were taking web 
development at the same time, we were learning while building the site so implementing these attributes was a lot more of just multiple 
tries and figuring out the issues. If all of us had the prior knowledge then putting the APIs and using the database with our site probably 
wouldn't have taken as much time to implement. Lastly, our time management began to become sort of an issue because of us switching projects 
so late. Looking at the project, there are still a couple features we wanted to add before handing it off to IT. We fell somewhat short on 
completing absolutely everything due to the fact that we pretty much switched projects half-way through the semester. As stated in the 
conclusion, we ran into some problems with our first project so after we knew we wanted to switch projects it was already close to the 
half-way point in the semester. In turn, all the work we were doing was pretty much at a double time pace to make sure we had a site 
that would be viable for the final presentation and something we could all four be proud of at the end.


// Nick part

One of the biggest challenges we faced in our software development project was managing the scope of the project. We had a clear vision of 
what we wanted to achieve, but as we began working on the project, we realized that our initial plans were too ambitious and would take 
significantly longer to complete than we had anticipated. We had to make the difficult decision to scale back on some of our initial plans 
and focus on completing the core functionality of the software. This was challenging as it required us to prioritize and make difficult choices 
about what features to include and what to leave out. We had planned to include a "trends" page, where we would provide information about usage 
rates of different classrooms over time. We ended up prioritizing the main functions of the project over this feature. We also had to make sure 
that the final product still met the needs of our target audience, even with the reduced scope. To help move the project along quicker, we held 
regular team meetings outside of class to help keep each other accountable. It was also helpful for our project to ensure that clear communication 
channels were in place, in the form of a text groupchat where we posted regular updates. We also assigned specific tasks and responsibilities to each 
team member, and provided support and guidance as was necessary. Through this approach, we were able to keep the team on track, and tie in all of our 
different parts into one project. Despite these challenges, we were able to successfully complete the project and deliver a functional product.

The overall goal of our project was to increase the efficiency of podium checks for the IT department. This is accomplished by using a few key features.
The first feature is that the software allows for the easy creation and distribution of student groups and room assignments every week, as opposed to 
creating those lists manually. The second feature, and in my opinion the most important feature, is that the software will dynamically create a list to 
checks that should be completed in each room.  These checks will be customized based off of the equipment in each room to ensure that the students are 
accurately checking what is installed in the room. This will also allow for non-standard rooms, such as Gibble auditorium, to be included inside of this 
podium check. The third feature is that the data from these checks will be stored in a organized database, with the ability to be efficiently searched and 
displayed by the admin of the site. This is a great improvement over the massive excel sheet that the department currently uses to store all of the data 
from the checks. Lastly, the site allows for the admin to add, edit, and delete users of the site through a web-based user interface. The site also allows 
for the admin to change the attributes in each room using a UI. With this benefit, the admin will be able to keep inventory of the rooms up-to-date without 
modifying any of the code. The admin will also be able to edit the checklist for each individual room without modifying the code.

Our testing plan was very simple, since the interface is very easy to use and does not allow for much variability of user inputs. We ran lots of data through 
the form and ensure that it was properly collected and stored. We also tested our mobile version of the site, to ensure that no display issues occurred from 
resizing all of the pages to fit on a mobile screen.

    The use cases for our project are rather limited so we focused more on different scenarios when the same user could be accessing the website, as well as 
admin access to the website. Our use cases are as follows:
Use case 1 (Student with no group assignment):
This use case is for a student who has an account on the site but has not been given an assignment for rooms to be checked. Either they are not working 
that day or they are using the site on the wrong day. They should still be able to sign in and see the home page, which tells them they have no assignment.
Use case 2 (Student with assignment on desktop):
This use case if for a student who has been given a room group assignment and is accessing the site on a laptop or desktop computer. This user should be 
able to log in and see who is in their group and which rooms they have been assigned. They can also fill the form required to check each individual room 
they have been assigned.
Use case 3 (Student with assignment on mobile):
This use case is the same as use case 2 except the student will be using a mobile device to access the site. The main difference is that the interface for 
viewing the website should be more mobile friendly with a navigation bar better suited for mobile.
User case 4 (Admin user):
The admin should be able to log in just like everyone else and see the form page if they want. The main difference for the admin is that they can see an 
additional item in the navigation menu for the admin page. From the admin page the admin user should be able to create new users, assign users to different 
groupings, and add or edit rooms on the room list.

Our traceability matrix will be provided in the docs folder as traceability_matrix.xlsx

    In conclusion of our project, we ended up finishing most of the features we wanted to implement, and the ones we did not are close to being completed. 
We are very satisfied with the result of our project and with a few small additions believe it would be able to serve its intended purpose well. After 
we got off to a slow start with changing our project idea a couple times, we ended up with a product that works well. This project was also challenging 
for us because none of us had any or much experience with wed development in the past, so there was a lot to learn. Not only did we learn a lot about web 
applications and their development, but also about how project groups would work together in a realistic scenarios such as our potential future jobs.
